plugins {
    id 'java'
    id 'java-library'
}

repositories {
    mavenCentral()
}

version "0.4.10"
def releaseDir = file( "release" )
def releaseTestDir = file( "release_test" )
def testsDir = file( "tests" )

dependencies {
    implementation 'org.apache.clerezza.ext:org.json.simple:0.4'
    implementation "org.jolie-lang:jolie:1.10.4"
    implementation "org.jolie-lang:libjolie:1.10.4"
    implementation "org.jolie-lang:jolie-js:1.10.4"
    implementation 'io.reactivex.rxjava3:rxjava:3.0.13'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.2.0'
    testImplementation 'org.junit.platform:junit-platform-runner:1.2.0'
}

compileJava   {
  sourceCompatibility = '11'
  targetCompatibility = '11'
}

//test {
//    useJUnitPlatform()
//}

jar {
    //from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }

    enabled = true

    manifest {
        attributes 'Main-Class': 'TQueryService'
    }
}

import org.apache.tools.ant.filters.ReplaceTokens

task makeRelease {
    tasks.compileJava.mustRunAfter( clean )
    dependsOn( clean )
    dependsOn( build )
    doLast{
        copy {
            from( buildDir.toPath().resolve( "libs" ) ){
                include "tquery*.jar"
            }
            into releaseDir.toPath().resolve( "dist" )
        }
        copy {
            from( projectDir ){
                include "jpm.json"
                include "main.ol"
                include "README.md"
                include "tquery_logo.png"
                filter( ReplaceTokens, tokens: [ VERSION: version ] )
            }
            into releaseDir
        }
    }
}

task runReleaseTests {
    dependsOn( clean )
    dependsOn( build )
    dependsOn tasks.named( "makeRelease" )
    doLast{
        println  "Running release tests"
        // we download and move the libraries into lib
        exec {
            commandLine "jpm", "install"
        }
        // we copy the libs and the JavaService into lib
        copy {
            from( "lib" ){
                include "*.jar"
            }
            into releaseTestDir.toPath().resolve( "lib" )
        }
        delete "lib" // we remove the lib folder
        copy {
            from( releaseDir.toPath().resolve( "dist" ) ){
                include "tquery*.jar"
            }
            into releaseTestDir.toPath().resolve( "lib" )
        }
        // we copy the test and data into the release test folder
        copy {
            from( testsDir ){
                include "data/*"
                include "pipelineTest.ol"
            }
            into releaseTestDir
        }
        // we copy main.ol into the release test folder
        copy {
            from( releaseDir ){
                include "main.ol"
            }
            into releaseTestDir.toPath().resolve( "packages/@jolie/tquery" )
        }
        exec {
            commandLine "jolie", "pipelineTest.ol"
            workingDir releaseTestDir
        }
    }
}
makeRelease.finalizedBy( runReleaseTests )

clean.doFirst{
    delete releaseDir
    delete releaseTestDir
}